/**
 * Demonstrates coroutine functionality with nested yield operations
 */

function processYieldOperation(yieldHandler) {
    println("[Step 5] Entering yield processing function");
    yieldHandler();
    println("[Step 7] Exiting yield processing function");
}

function coroutineExample(param1, param2) {
    println("[Step 2] Entering coroutine");
    println("[Step 3] Parameter 1 = " + param1);
    println("[Step 4] Parameter 2 = " + param2);
    var yieldHandler = yield;
    processYieldOperation(yieldHandler);
    println("[Step 8] Exiting coroutine");
}

var coroutineInstance = new Coroutine(coroutineExample, "value1", "value2");
println("[Step 1] First resume call");
coroutineInstance.resume();
println("[Step 6] Second resume call");
coroutineInstance.resume();
println("[Step 9] Coroutine execution completed");