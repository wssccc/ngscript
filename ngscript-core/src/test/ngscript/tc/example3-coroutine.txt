// Coroutine demonstration with parameter passing
function processData(firstParam, secondParam, thirdParam) {
      println("Processing first parameter: " + firstParam);
      // Yield control back to caller with intermediate result
      yield(1);
      // Execution resumes here after first yield
      println("Processing second parameter: " + secondParam);
      println("Processing third parameter: " + thirdParam);
}

// Initialize coroutine with parameters
var dataProcessor = new Coroutine(processData, "param 1", "param 2", "param 3");
// Alternative parameter passing method (commented out)
// dataProcessor.push("p1");
// dataProcessor.push("p2");

println("Coroutine status: " + dataProcessor.status());
// Resume execution and capture return value
println("First resume result: " + dataProcessor.resume());
println("Coroutine status: " + dataProcessor.status());
// Second resume has no return value
println("Second resume result: " + dataProcessor.resume());
println("Coroutine status: " + dataProcessor.status());
// Attempting to resume a completed coroutine
try {
      println("Attempting third resume:");
      println(dataProcessor.resume());
} catch(e) {
      println("Error: Cannot resume a completed coroutine");
}